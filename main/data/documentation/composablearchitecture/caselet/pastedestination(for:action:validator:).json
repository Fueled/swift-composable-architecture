{"metadata":{"title":"pasteDestination(for:action:validator:)","extendedModule":"SwiftUICore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"pasteDestination","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"action"},{"text":": ([","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"]) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"validator","kind":"externalParam"},{"kind":"text","text":": (["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"name":"macOS","beta":false,"introducedAt":"13.0","unavailable":false,"deprecated":false}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE16pasteDestination3for6action9validatorQrqd__m_ySayqd__GcA2Hct16CoreTransferable0J0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/pasteDestination(for:action:validator:)"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.pasteDestination(for:action:validator:)"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pasteDestination"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"payloadType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type = T.self, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" ([","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"validator"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" (["},{"kind":"typeIdentifier","text":"T"},{"text":"]) -> [","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"] = { $0 }) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16CoreTransferable0B0P","text":"Transferable"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/pastedestination(for:action:validator:)"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/pasteDestination(for:action:validator:)":{"title":"pasteDestination(for:action:validator:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/pasteDestination(for:action:validator:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pasteDestination"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"action","kind":"externalParam"},{"text":": ([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"text":"validator","kind":"externalParam"},{"kind":"text","text":": (["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> ["},{"text":"T","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/pastedestination(for:action:validator:)","type":"topic","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","kind":"symbol","deprecated":true,"title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}]}}}