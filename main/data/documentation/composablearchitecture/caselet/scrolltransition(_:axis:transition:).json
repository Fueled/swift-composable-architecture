{"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.scrollTransition(_:axis:transition:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(_:axis:transition:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollTransition"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"configuration","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"text":" = .interactive, ","kind":"text"},{"kind":"externalParam","text":"axis"},{"kind":"text","text":": "},{"text":"Axis","preciseIdentifier":"s:7SwiftUI4AxisO","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"text":"transition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"EmptyVisualEffect","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV"},{"text":", ","kind":"text"},{"text":"ScrollTransitionPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO"},{"text":") -> some ","kind":"text"},{"text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/scrolltransition(_:axis:transition:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"sections":[],"metadata":{"extendedModule":"SwiftUICore","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE16scrollTransition_4axis10transitionQrAA06ScrollE13ConfigurationV_AA4AxisOSgqd__AA17EmptyVisualEffectV_AA0hE5PhaseOtYbctAA0lM0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollTransition"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier","text":"ScrollTransitionConfiguration"},{"text":", ","kind":"text"},{"text":"axis","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO","text":"Axis"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"transition"},{"text":": (","kind":"text"},{"text":"EmptyVisualEffect","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV"},{"kind":"text","text":", "},{"text":"ScrollTransitionPhase","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","kind":"typeIdentifier"},{"text":") -> some ","kind":"text"},{"kind":"typeIdentifier","text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":[{"deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false,"name":"iOS"},{"name":"macOS","beta":false,"introducedAt":"14.0","deprecated":false,"unavailable":false},{"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false},{"introducedAt":"10.0","unavailable":false,"name":"watchOS","beta":false,"deprecated":false}],"roleHeading":"Instance Method","title":"scrollTransition(_:axis:transition:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/scrollTransition(_:axis:transition:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/scrolltransition(_:axis:transition:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scrollTransition"},{"kind":"text","text":"("},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"axis","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4AxisO","kind":"typeIdentifier","text":"Axis"},{"text":"?, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","kind":"typeIdentifier","text":"EmptyVisualEffect"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","text":"ScrollTransitionPhase"},{"kind":"text","text":") -> some "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(_:axis:transition:)","abstract":[],"title":"scrollTransition(_:axis:transition:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","kind":"symbol","deprecated":true,"title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"}}}