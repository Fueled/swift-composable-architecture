{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scrollTransition","kind":"identifier"},{"kind":"text","text":"("},{"text":"topLeading","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV"},{"kind":"text","text":", "},{"text":"bottomTrailing","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier","text":"ScrollTransitionConfiguration"},{"text":", ","kind":"text"},{"text":"axis","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Axis","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO"},{"text":"? = nil, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ScrollTransitionPhase","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","kind":"typeIdentifier"},{"text":") -> some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.scrollTransition(topLeading:bottomTrailing:axis:transition:)"},{"type":"text","text":"."}],"metadata":{"externalID":"s:7SwiftUI4ViewPAAE16scrollTransition10topLeading14bottomTrailing4axis10transitionQrAA06ScrollE13ConfigurationV_AjA4AxisOSgqd__AA17EmptyVisualEffectV_AA0lE5PhaseOtYbctAA0pQ0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollTransition"},{"text":"(","kind":"text"},{"text":"topLeading","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bottomTrailing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","text":"ScrollTransitionConfiguration"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"axis"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4AxisO","text":"Axis","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"EmptyVisualEffect","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","text":"ScrollTransitionPhase","kind":"typeIdentifier"},{"text":") -> some ","kind":"text"},{"text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","title":"scrollTransition(topLeading:bottomTrailing:axis:transition:)","extendedModule":"SwiftUICore","platforms":[{"introducedAt":"17.0","name":"iOS","unavailable":false,"deprecated":false,"beta":false},{"beta":false,"unavailable":false,"introducedAt":"14.0","name":"macOS","deprecated":false},{"introducedAt":"17.0","name":"tvOS","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"introducedAt":"10.0","unavailable":false,"beta":false,"name":"watchOS"}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/scrolltransition(topleading:bottomtrailing:axis:transition:)"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(topLeading:bottomTrailing:axis:transition:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/scrollTransition(topLeading:bottomTrailing:axis:transition:)":{"url":"\/documentation\/composablearchitecture\/caselet\/scrolltransition(topleading:bottomtrailing:axis:transition:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scrollTransition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"topLeading","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScrollTransitionConfiguration","preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bottomTrailing"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI29ScrollTransitionConfigurationV","text":"ScrollTransitionConfiguration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"axis"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4AxisO","text":"Axis"},{"kind":"text","text":"?, "},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","text":"EmptyVisualEffect"},{"text":", ","kind":"text"},{"text":"ScrollTransitionPhase","preciseIdentifier":"s:7SwiftUI21ScrollTransitionPhaseO","kind":"typeIdentifier"},{"text":") -> some ","kind":"text"},{"text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"title":"scrollTransition(topLeading:bottomTrailing:axis:transition:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scrollTransition(topLeading:bottomTrailing:axis:transition:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","kind":"symbol","deprecated":true,"title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"}}}