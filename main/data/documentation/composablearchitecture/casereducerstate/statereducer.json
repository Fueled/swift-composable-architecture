{"kind":"symbol","metadata":{"symbolKind":"associatedtype","roleHeading":"Associated Type","externalID":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","title":"StateReducer","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"StateReducer","kind":"identifier"},{"kind":"text","text":" : "},{"text":"CaseReducer","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP","kind":"typeIdentifier"}],"required":true,"role":"symbol","modules":[{"name":"ComposableArchitecture"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"StateReducer","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","kind":"typeIdentifier","text":"CaseReducer","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"StateReducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState\/StateReducer"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"}],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/casereducerstate\/statereducer"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState\/StateReducer","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"type":"text","text":" protocol for a type."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"navigatorTitle":[{"kind":"identifier","text":"CaseReducer"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/casereducer","abstract":[{"text":"A reducer represented by multiple enum cases.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","title":"CaseReducer","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseReducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","required":true,"title":"State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","url":"\/documentation\/composablearchitecture\/casereducerstate","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseReducerState","kind":"identifier"}],"title":"CaseReducerState","type":"topic","abstract":[{"text":"A state type that is associated with a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState/StateReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState\/StateReducer","kind":"symbol","required":true,"role":"symbol","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateReducer","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP","kind":"typeIdentifier","text":"CaseReducer"}],"type":"topic","url":"\/documentation\/composablearchitecture\/casereducerstate\/statereducer","title":"StateReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]}}}