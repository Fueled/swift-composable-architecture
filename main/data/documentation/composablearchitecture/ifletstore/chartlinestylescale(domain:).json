{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"domain"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts11ScaleDomainP","text":"ScaleDomain","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.chartLineStyleScale(domain:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(domain:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(domain:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"metadata":{"externalID":"s:7SwiftUI4ViewP6ChartsE19chartLineStyleScale6domainQrqd___tAD0H6DomainRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"chartLineStyleScale(domain:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"symbolKind":"method","platforms":[{"unavailable":false,"beta":false,"name":"iOS","deprecated":false,"introducedAt":"16.0"},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"13.0","unavailable":false},{"unavailable":false,"name":"tvOS","introducedAt":"16.0","beta":false,"deprecated":false},{"deprecated":false,"unavailable":false,"introducedAt":"9.0","name":"watchOS","beta":false}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartLineStyleScale","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"domain"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","type":"topic","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartLineStyleScale(domain:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartLineStyleScale","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Domain","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartLineStyleScale(domain:)","abstract":[],"title":"chartLineStyleScale(domain:)","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/chartlinestylescale(domain:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"role":"collectionGroup","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"}}}