{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(initialX:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(initialx:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartScrollPosition(initialX:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartScrollPosition"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"initialX"},{"text":": some ","kind":"text"},{"text":"Plottable","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9PlottableP"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"platforms":[{"beta":false,"name":"iOS","unavailable":false,"introducedAt":"17.0","deprecated":false},{"introducedAt":"14.0","beta":false,"unavailable":false,"name":"macOS","deprecated":false},{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"17.0"},{"introducedAt":"10.0","name":"watchOS","deprecated":false,"unavailable":false,"beta":false}],"extendedModule":"SwiftUICore","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartScrollPosition"},{"kind":"text","text":"("},{"text":"initialX","kind":"externalParam"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"externalID":"s:7SwiftUI4ViewP6ChartsE19chartScrollPosition8initialXQrqd___tAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"chartScrollPosition(initialX:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"role":"collectionGroup","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","type":"topic","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartScrollPosition(initialX:)":{"type":"topic","abstract":[],"title":"chartScrollPosition(initialX:)","url":"\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(initialx:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartScrollPosition"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"initialX"},{"kind":"text","text":": some "},{"text":"Plottable","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9PlottableP"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(initialX:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"}}}