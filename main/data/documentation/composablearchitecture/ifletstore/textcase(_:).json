{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.textCase(_:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"textCase","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"textCase","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Text","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV"},{"text":".","kind":"text"},{"text":"Case","preciseIdentifier":"s:7SwiftUI4TextV4CaseO","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/textCase(_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"method","title":"textCase(_:)","role":"symbol","platforms":[{"beta":false,"name":"iOS","introducedAt":"14.0","deprecated":false,"unavailable":false},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"11.0"},{"name":"tvOS","beta":false,"deprecated":false,"introducedAt":"14.0","unavailable":false},{"deprecated":false,"unavailable":false,"introducedAt":"7.0","name":"watchOS","beta":false}],"externalID":"s:7SwiftUI4ViewPAAE8textCaseyQrAA4TextV0E0OSgF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"textCase","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV","text":"Text"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI4TextV4CaseO","text":"Case","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"roleHeading":"Instance Method","extendedModule":"SwiftUICore"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/textcase(_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"role":"collectionGroup","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/textCase(_:)":{"title":"textCase(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/textCase(_:)","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/textcase(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"textCase"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Text","preciseIdentifier":"s:7SwiftUI4TextV"},{"kind":"text","text":"."},{"text":"Case","preciseIdentifier":"s:7SwiftUI4TextV4CaseO","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","type":"topic","title":"IfLetStore"}}}