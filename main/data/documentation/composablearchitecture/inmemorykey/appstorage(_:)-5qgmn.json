{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey\/appStorage(_:)-5qgmn"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha","text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture017AppStorageKeyPathE0V","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","kind":"typeIdentifier","text":"AppStorageKeyPathKey"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A persistence key."}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"For example, one could initialize a key with the date and time at which the application was"},{"text":" ","type":"text"},{"type":"text","text":"most recently launched, and access this date from anywhere using the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true},{"text":" property","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"wrapper:"}],"type":"paragraph"},{"type":"codeListing","code":["@Shared(.appStorage(\\.appLaunchedAt)) var appLaunchedAt = Date()"],"syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Creates a persistence key for sharing data in user defaults given a key path.","type":"text"}],"metadata":{"extendedModule":"ComposableArchitecture","title":"appStorage(_:)","externalID":"s:22ComposableArchitecture20PersistenceReaderKeyPAAE10appStorageyAA03Appge4PathE0Vyqd__Gs8Sendable_s017ReferenceWritableeI0CySo14NSUserDefaultsCqd__GXcAGRszsAHRd__lFZ::SYNTHESIZED::s:22ComposableArchitecture11InMemoryKeyV","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Type Method","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"appStorage","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/inmemorykey\/appstorage(_:)-5qgmn"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey\/PersistenceReaderKey-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey\/PersistenceReaderKey-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey/appStorage(_:)-5qgmn":{"url":"\/documentation\/composablearchitecture\/inmemorykey\/appstorage(_:)-5qgmn","kind":"symbol","abstract":[{"text":"Creates a persistence key for sharing data in user defaults given a key path.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey\/appStorage(_:)-5qgmn","title":"appStorage(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"appStorage"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha"},{"text":"<","kind":"text"},{"text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","title":"Sharing state","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/shared","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","title":"Shared","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Shared"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey/PersistenceReaderKey-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/inmemorykey\/persistencereaderkey-implementations","title":"PersistenceReaderKey Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey\/PersistenceReaderKey-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"title":"AppStorageKeyPathKey","role":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","url":"\/documentation\/composablearchitecture\/inmemorykey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InMemoryKey"}],"navigatorTitle":[{"text":"InMemoryKey","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type defining an in-memory persistence strategy"}],"title":"InMemoryKey","kind":"symbol"}}}