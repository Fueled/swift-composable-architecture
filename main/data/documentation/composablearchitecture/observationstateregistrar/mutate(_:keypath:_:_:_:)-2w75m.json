{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"abstract":[{"text":"Mutates a value to a new value, and decided to notify observers based on the identity of","type":"text"},{"text":" ","type":"text"},{"text":"the value.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mutate"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"subject","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newValue","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"isIdentityEqual"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Observation10ObservableP","text":"Observable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"subject","content":[{"inlineContent":[{"text":"An instance of an observable type.","type":"text"}],"type":"paragraph"}]},{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"text":"The key path of an observed property.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value being mutated."}]}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value to mutate with."}]}],"name":"newValue"},{"name":"isIdentityEqual","content":[{"type":"paragraph","inlineContent":[{"text":"A comparison function that determines whether two values have the","type":"text"},{"text":" ","type":"text"},{"text":"same identity or not.","type":"text"}]}]}]}],"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"introducedAt":"17.0"},{"name":"macOS","unavailable":false,"introducedAt":"14.0","beta":false,"deprecated":false},{"name":"tvOS","beta":false,"unavailable":false,"introducedAt":"17.0","deprecated":false},{"introducedAt":"10.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6mutate_7keyPath___yx_s03KeyH0Cyxq_Gq0_zq0_Sbq0__q0_tXEt0C010ObservableRzr1_lF","extendedModule":"ComposableArchitecture","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mutate"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Member","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"title":"mutate(_:keyPath:_:_:_:)","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/mutate(_:keyPath:_:_:_:)-2w75m":{"kind":"symbol","title":"mutate(_:keyPath:_:_:_:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m","abstract":[{"type":"text","text":"Mutates a value to a new value, and decided to notify observers based on the identity of"},{"type":"text","text":" "},{"type":"text","text":"the value."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"},{"text":"()","kind":"text"}],"kind":"symbol","title":"ObservableState()","url":"\/documentation\/composablearchitecture\/observablestate()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","required":true,"title":"State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"kind":"symbol","title":"ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","abstract":[{"type":"text","text":"Provides storage for tracking and access to data changes."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]}}}