{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A key path that indicates the property of the "},{"type":"codeVoice","code":"DependencyValues"},{"type":"text","text":" structure to"},{"text":" ","type":"text"},{"type":"text","text":"update."}],"type":"paragraph"}],"name":"keyPath"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The new value to set for the item specified by ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":"."}]}],"name":"value"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A reducer that has the given value set in its dependencies.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This overrides the dependency specified by ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"text":" for the execution of the receiving","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" all of its effects. It can be useful for altering the dependencies for just","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"one portion of your application, while letting the rest of the application continue using the"},{"text":" ","type":"text"},{"type":"text","text":"default live dependencies."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, suppose you are creating an onboarding experience to teach people how to use one"},{"type":"text","text":" "},{"text":"of your features. This can be done by constructing a new reducer that embeds the core","type":"text"},{"type":"text","text":" "},{"text":"feature’s domain and layers on additional logic:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct Onboarding {","  struct State {","    var feature: Feature.State","    \/\/ Additional onboarding state","  }","  enum Action {","    case feature(Feature.Action)","    \/\/ Additional onboarding actions","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.feature, action: \\.feature) {","      Feature()","    }","","    Reduce { state, action in","      \/\/ Additional onboarding logic","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"text":"This can work just fine, but the ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" reducer will have access to all of the live"},{"type":"text","text":" "},{"text":"dependencies by default, and that might not be ideal. For example, the ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" reducer"},{"text":" ","type":"text"},{"type":"text","text":"may need to make API requests and read\/write from user defaults. It may be preferable"},{"type":"text","text":" "},{"text":"to run the ","type":"text"},{"code":"Feature","type":"codeVoice"},{"text":" reducer in an alternative environment for onboarding purposes, such","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as an API client that returns some mock data or an in-memory user defaults so that the"},{"type":"text","text":" "},{"type":"text","text":"onboarding experience doesn’t accidentally trample on shared data."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be by using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)"},{"type":"text","text":" method to override those dependencies"},{"type":"text","text":" "},{"type":"text","text":"just for the "},{"code":"Feature","type":"codeVoice"},{"text":" reducer and its effects:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var body: some Reducer<State, Action> {","  Scope(state: \\.feature, action: \\.feature) {","    Feature()","      .dependency(\\.apiClient, .mock)","      .dependency(\\.userDefaults, .mock)","  }","","  Reduce { state, action in","    \/\/ Additional onboarding logic","  }","}"]},{"inlineContent":[{"text":"See ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","isActive":true,"type":"reference"},{"type":"text","text":" for a similar method that can inspect and modify the"},{"type":"text","text":" "},{"type":"text","text":"current dependency when overriding."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"dependency(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture7ReducerPAAE10dependencyyAA021_DependencyKeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_qd__tlF::SYNTHESIZED::s:22ComposableArchitecture5ScopeV"},"variants":[{"paths":["\/documentation\/composablearchitecture\/scope\/dependency(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","type":"topic","abstract":[],"title":"Reducer Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/dependency(_:_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/dependency(_:_:)","title":"dependency(_:_:)","abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/scope\/dependency(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/transformDependency(_:transform:)":{"url":"\/documentation\/composablearchitecture\/scope\/transformdependency(_:transform:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","title":"transformDependency(_:transform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/transformDependency(_:transform:)","kind":"symbol","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"title":"Scope","url":"\/documentation\/composablearchitecture\/scope","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"type":"topic","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"navigatorTitle":[{"text":"Scope","kind":"identifier"}]}}}