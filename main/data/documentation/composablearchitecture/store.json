{"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"title":"Store","roleHeading":"Class","externalID":"s:22ComposableArchitecture5StoreC"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"seeAlsoSections":[{"title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"generated":true,"anchor":"State-management"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/11Observation10ObservableP","doc:\/\/ComposableArchitecture\/10Perception11PerceptibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/composablearchitecture\/store"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Creating a store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"],"anchor":"Creating-a-store"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"],"anchor":"Accessing-state","title":"Accessing state"},{"title":"Sending actions","anchor":"Sending-actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"]},{"title":"Scoping stores","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"],"anchor":"Scoping-stores"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher"],"title":"Combine integration","anchor":"Combine-integration"},{"title":"Deprecated interfaces","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations"],"anchor":"Deprecated-interfaces"},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-20w4g","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-2wgiw"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"@dynamicMemberLookup","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You will typically construct a single one of these at the root of your application:","type":"text"}]},{"code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(initialState: AppFeature.State()) {","          AppFeature()","        }","      )","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"…and then use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"text":" method to derive more focused stores that can be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"passed to subviews."}]},{"anchor":"Scoping","level":3,"text":"Scoping","type":"heading"},{"inlineContent":[{"text":"The most important operation defined on ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"text":" is the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"text":" method,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which allows you to transform a store into one that deals with child state and actions. This is"},{"text":" ","type":"text"},{"type":"text","text":"necessary for passing stores to subviews that only care about a small portion of the entire"},{"type":"text","text":" "},{"text":"application’s domain.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if an application has a tab view at its root with tabs for activity, search, and"},{"type":"text","text":" "},{"type":"text","text":"profile, then we can model the domain like this:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct AppFeature {","  struct State {","    var activity: Activity.State","    var profile: Profile.State","    var search: Search.State","  }","","  enum Action {","    case activity(Activity.Action)","    case profile(Profile.Action)","    case search(Search.Action)","  }","","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can construct a view for each of these domains by applying "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"reference"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"type":"text","text":"a store that holds onto the full app domain in order to transform it into a store for each"},{"type":"text","text":" "},{"type":"text","text":"subdomain:"}]},{"syntax":"swift","code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    TabView {","      ActivityView(","        store: store.scope(state: \\.activity, action: \\.activity)","      )","      .tabItem { Text(\"Activity\") }","","      SearchView(","        store: store.scope(state: \\.search, action: \\.search)","      )","      .tabItem { Text(\"Search\") }","","      ProfileView(","        store: store.scope(state: \\.profile, action: \\.profile)","      )","      .tabItem { Text(\"Profile\") }","    }","  }","}"],"type":"codeListing"},{"type":"heading","text":"Thread safety","anchor":"Thread-safety","level":3},{"inlineContent":[{"text":"The ","type":"text"},{"code":"Store","type":"codeVoice"},{"type":"text","text":" class is not thread-safe, and so all interactions with an instance of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" "},{"text":"(including all of its child stores) must be done on the same thread the store was created on.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Further, if the store is powering a SwiftUI or UIKit view, as is customary, then all"},{"type":"text","text":" "},{"type":"text","text":"interactions must be done on the "},{"inlineContent":[{"text":"main","type":"text"}],"type":"emphasis"},{"text":" thread.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,"},{"type":"text","text":" "},{"type":"text","text":"a reducer is run on the current state, and this process cannot be done from multiple threads."},{"text":" ","type":"text"},{"type":"text","text":"It is possible to make this process thread-safe by introducing locks or queues, but this"},{"type":"text","text":" "},{"text":"introduces new complications:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If done simply with "},{"code":"DispatchQueue.main.async","type":"codeVoice"},{"type":"text","text":" you will incur a thread hop even when you are"},{"type":"text","text":" "},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"type":"text","text":" "},{"type":"text","text":"sometimes you are required to do work synchronously, such as in animation blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It is possible to create a scheduler that performs its work immediately when on the main","type":"text"},{"type":"text","text":" "},{"type":"text","text":"thread and otherwise uses "},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"text":" (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":", see Combine Schedulers’"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","isActive":true},{"text":").","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This introduces a lot more complexity, and should probably not be adopted without having a very"},{"type":"text","text":" "},{"type":"text","text":"good reason."}]},{"inlineContent":[{"type":"text","text":"This is why we require all actions be sent from the same thread. This requirement is in the same"},{"text":" ","type":"text"},{"text":"spirit of how ","type":"text"},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" and other Apple APIs are designed. Those APIs tend to deliver their"},{"text":" ","type":"text"},{"text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to","type":"text"},{"text":" ","type":"text"},{"text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you","type":"text"},{"text":" ","type":"text"},{"text":"responsible for making sure to send actions on the main thread. If you are using an effect that","type":"text"},{"type":"text","text":" "},{"text":"may deliver its output on a non-main thread, you must explicitly perform ","type":"text"},{"type":"codeVoice","code":".receive(on:)"},{"type":"text","text":" in"},{"text":" ","type":"text"},{"text":"order to force it back on the main thread.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This approach makes the fewest number of assumptions about how effects are created and","type":"text"},{"text":" ","type":"text"},{"text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests"},{"text":" ","type":"text"},{"type":"text","text":"all of the effects would run synchronously and immediately. You would not be able to test how"},{"type":"text","text":" "},{"text":"multiple in-flight effects interleave with each other and affect the state of your application.","type":"text"},{"text":" ","type":"text"},{"text":"However, by leaving scheduling out of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" we get to test these aspects of our effects"},{"type":"text","text":" "},{"text":"if we so desire, or we can ignore if we prefer. We have that flexibility.","type":"text"}]},{"text":"Thread safety checks","level":4,"anchor":"Thread-safety-checks","type":"heading"},{"inlineContent":[{"type":"text","text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores"},{"text":" ","type":"text"},{"type":"text","text":"constructed via the initializer "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","type":"reference","isActive":true},{"type":"text","text":" are assumed"},{"type":"text","text":" "},{"type":"text","text":"to run only on the main thread, and so a check is executed immediately to make sure that is the"},{"text":" ","type":"text"},{"text":"case. Further, all actions sent to the store and all scopes (see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"of the store are also checked to make sure that work is performed on the main thread."}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"title":"ObservableState","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"}],"navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/observablestate","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","title":"withState(_:)"},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","type":"link","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","title":"UIScheduler","titleInlineContent":[{"text":"UIScheduler","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"kind":"symbol","abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}],"type":"topic","url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","title":"send(_:transaction:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier","text":"StoreTask"}]},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ComposableArchitecture/10Perception11PerceptibleP":{"identifier":"doc:\/\/ComposableArchitecture\/10Perception11PerceptibleP","type":"unresolvable","title":"Perception.Perceptible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-20w4g":{"abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-20w4g","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Action.ViewAction.State"},{"type":"text","text":", "},{"type":"codeVoice","code":"Action"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ViewAction"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Action.ViewAction"},{"text":" conforms to ","type":"text"},{"code":"BindableAction","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/composablearchitecture\/store\/state-20w4g","kind":"symbol","title":"state"},"doc://ComposableArchitecture/11Observation10ObservableP":{"identifier":"doc:\/\/ComposableArchitecture\/11Observation10ObservableP","type":"unresolvable","title":"Observation.Observable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Sends an action to the store."}],"title":"send(_:)","url":"\/documentation\/composablearchitecture\/store\/send(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"text":": ","kind":"text"},{"text":"Animation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"text":"?) -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)","title":"send(_:animation:)","abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-2ym6k":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}]},"title":"scope(state:action:fileID:filePath:line:column:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"text":"ElementID","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElementState"},{"kind":"text","text":", "},{"text":"ElementAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sk","text":"RandomAccessCollection"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ElementAction","kind":"typeIdentifier"},{"kind":"text","text":">>\n"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","type":"topic","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-2ym6k","abstract":[{"type":"text","text":"Scopes the store of an identified collection to a collection of stores."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","title":"Sharing state","role":"collectionGroup","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoreOf"}],"title":"StoreOf","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/storeof","navigatorTitle":[{"kind":"identifier","text":"StoreOf"}],"abstract":[{"text":"A convenience type alias for referring to a store of a given reducer’s domain.","type":"text"}]},"doc://ComposableArchitecture/s12IdentifiableP":{"identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP","type":"unresolvable","title":"Swift.Identifiable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-3yvuf":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">?"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-3yvuf","type":"topic","title":"scope(state:action:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","abstract":[{"type":"text","text":"Scopes the store to optional child state and actions."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"url":"\/documentation\/composablearchitecture\/store\/case","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`case`"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"StateReducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"CaseScope","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CaseReducerState"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"text":" is ","type":"text"},{"code":"State.StateReducer.Action","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","kind":"symbol","title":"case","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"type":"topic","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","abstract":[],"title":"subscript(dynamicMember:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}]},"role":"symbol","kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/CustomDebugStringConvertible-Implementations":{"title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/store\/customdebugstringconvertible-implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StorePublisher"}],"title":"StorePublisher","role":"symbol","type":"topic","abstract":[{"text":"A publisher of store state.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/storepublisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/store\/equatable-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"scope(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Identifiable-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/store\/identifiable-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","title":"Identifiable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:withDependencies:)":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"reducer","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"text":"withDependencies","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"title":"init(initialState:reducer:withDependencies:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:withdependencies:)","abstract":[{"text":"Initializes a store from an initial state and a reducer.","type":"text"}]},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-2wgiw":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"State"}],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"text":", ","type":"text"},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"text":" is ","type":"text"},{"code":"Action.State","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BindableAction"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/composablearchitecture\/store\/state-2wgiw","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-2wgiw","title":"state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"State"}],"title":"state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","abstract":[{"type":"text","text":"Direct access to state in the store when "},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","isActive":true},{"type":"text","text":"."}]},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Hashable-Implementations":{"title":"Hashable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","url":"\/documentation\/composablearchitecture\/store\/hashable-implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StoreTask"}],"abstract":[{"text":"The type returned from ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)"},{"text":" that represents the lifecycle of the effect","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"started from sending an action."}],"type":"topic","kind":"symbol","title":"StoreTask","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storetask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreDeprecations":{"role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/storedeprecations","abstract":[{"type":"text","text":"Review unsupported store APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]}}}