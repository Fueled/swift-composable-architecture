{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.chartSymbolScale(mapping:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartSymbolScale(mapping:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/chartsymbolscale(mapping:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DataValue"},{"kind":"text","text":", "},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"mapping","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"16.0","name":"iOS","beta":false},{"introducedAt":"13.0","name":"macOS","beta":false,"deprecated":false,"unavailable":false},{"unavailable":false,"beta":false,"introducedAt":"16.0","deprecated":false,"name":"tvOS"},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"9.0","unavailable":false}],"symbolKind":"method","title":"chartSymbolScale(mapping:)","role":"symbol","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScale7mappingQrqd_0_qd__c_tAD9PlottableRd__AD05ChartF5ShapeRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","extendedModule":"SwiftUICore"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DataValue"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mapping"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"DataValue"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/chartSymbolScale(mapping:)":{"abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartSymbolScale(mapping:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartSymbolScale"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DataValue"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"mapping","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"DataValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"url":"\/documentation\/composablearchitecture\/switchstore\/chartsymbolscale(mapping:)","kind":"symbol","title":"chartSymbolScale(mapping:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","title":"View Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","kind":"symbol","deprecated":true,"title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]}}}