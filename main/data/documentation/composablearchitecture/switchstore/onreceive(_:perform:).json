{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onReceive(_:perform:)"},{"text":".","type":"text"}],"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onReceive","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","platforms":[{"introducedAt":"13.0","name":"iOS","beta":false,"unavailable":false,"deprecated":false},{"introducedAt":"10.15","beta":false,"unavailable":false,"name":"macOS","deprecated":false},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"tvOS"},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"6.0","unavailable":false}],"symbolKind":"method","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE9onReceive_7performQrqd___y6OutputQyd__ct7Combine9PublisherRd__s5NeverO7FailureRtd__lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","extendedModule":"SwiftUICore","title":"onReceive(_:perform:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onReceive","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"publisher"},{"kind":"text","text":": "},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":" "},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine9PublisherP7FailureQa","text":"Failure","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/onreceive(_:perform:)"]}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onReceive(_:perform:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","title":"View Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/onReceive(_:perform:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onReceive(_:perform:)","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onReceive","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/onreceive(_:perform:)","title":"onReceive(_:perform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore","kind":"symbol","deprecated":true,"title":"SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}]}}}