{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"metadata":{"title":"ViewStore","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"externalID":"s:22ComposableArchitecture9ViewStoreC","platforms":[],"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}]},"topicSections":[{"title":"Creating a view store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf"],"anchor":"Creating-a-view-store"},{"title":"Accessing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk"],"anchor":"Accessing-state"},{"title":"Sending actions","anchor":"Sending-actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"]},{"anchor":"SwiftUI-integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh"],"title":"SwiftUI integration"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes"]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"@dynamicMemberLookup","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ViewState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ViewAction"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"In SwiftUI applications, a "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is accessed most commonly using the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"view. It can be initialized with a store and a closure that is handed a view store and returns a"},{"text":" ","type":"text"},{"type":"text","text":"view:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var body: some View {","  WithViewStore(self.store, observe: { $0 }) { viewStore in","    VStack {","      Text(\"Current count: \\(viewStore.count)\")","      Button(\"Increment\") { viewStore.send(.incrementButtonTapped) }","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"View stores can also be observed directly by views, scenes, commands, and other contexts that"},{"text":" ","type":"text"},{"text":"support the ","type":"text"},{"code":"@ObservedObject","type":"codeVoice"},{"text":" property wrapper:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@ObservedObject var viewStore: ViewStore<State, Action>"]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you experience compile-time issues with views that use ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","isActive":true},{"type":"text","text":", try"},{"type":"text","text":" "},{"type":"text","text":"observing the view store directly using the "},{"code":"@ObservedObject","type":"codeVoice"},{"text":" property wrapper, instead, which","type":"text"},{"type":"text","text":" "},{"text":"is easier on the compiler.","type":"text"}]}],"type":"aside","name":"Tip","style":"tip"},{"inlineContent":[{"text":"In UIKit applications a ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" can be created from a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" and then subscribed to for","type":"text"},{"text":" ","type":"text"},{"text":"state updates:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let store: Store<State, Action>","let viewStore: ViewStore<State, Action>","private var cancellables: Set<AnyCancellable> = []","","init(store: Store<State, Action>) {","  self.store = store","  self.viewStore = ViewStore(store, observe: { $0 })","}","","func viewDidLoad() {","  super.viewDidLoad()","","  self.viewStore.publisher.count","    .sink { [weak self] in self?.countLabel.text = $0 }","    .store(in: &self.cancellables)","}","","@objc func incrementButtonTapped() {","  self.viewStore.send(.incrementButtonTapped)","}"],"type":"codeListing"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"text":" class is not thread-safe, and all interactions with it (and the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"store it was derived from) must happen on the same thread. Further, for SwiftUI applications,"},{"type":"text","text":" "},{"text":"all interactions must happen on the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"main","type":"text"}]},{"text":" thread. See the documentation of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"class for more information as to why this decision was made."}]}],"type":"aside"}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}],"type":"paragraph"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewstore"]}],"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9mg12":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","title":"init(_:observe:send:removeDuplicates:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9mg12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:while:)":{"title":"send(_:animation:while:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:while:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:while:)","abstract":[{"type":"text","text":"Sends an action into the store and then suspends while a piece of state is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","role":"collectionGroup","type":"topic","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-kwxk":{"url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-kwxk","abstract":[{"type":"text","text":"Returns the resulting value of a given key path."}],"role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"text":"Value","kind":"typeIdentifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk","type":"topic","title":"subscript(dynamicMember:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"title":"send(_:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)","abstract":[{"type":"text","text":"Sends an action to the store."}],"type":"topic","kind":"symbol","role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"title":"send(_:while:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","abstract":[{"type":"text","text":"Sends an action into the store and then suspends while a piece of state is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","type":"topic","abstract":[{"type":"text","text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings."}],"kind":"article","title":"Working with SwiftUI bindings","url":"\/documentation\/composablearchitecture\/bindings","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:animation:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:animation:)","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"kind":"symbol","title":"send(_:animation:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:animation:)","role":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-1m32f":{"role":"symbol","title":"init(_:observe:send:)","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-1m32f","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStoreOf":{"url":"\/documentation\/composablearchitecture\/viewstoreof","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStoreOf"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewStoreOf"}],"title":"ViewStoreOf","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf","kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to a view store of a given reducer’s domain."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-4f9j5":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","title":"init(_:observe:removeDuplicates:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-4f9j5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-96hm5":{"title":"init(_:observe:)","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-96hm5","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-96hm5","conformance":{"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into an observable ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to compute bindings from state."}],"fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-4hzhi":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-4hzhi","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ViewState"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"text":" into an observable ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference","isActive":true},{"text":" in order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to compute bindings from state."}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier","text":"BindingViewStore"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">) -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(_:observe:send:)","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-4hzhi","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-3q4xh":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-3q4xh","conformance":{"constraints":[{"code":"ViewState","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ViewAction.State","type":"codeVoice"},{"type":"text","text":" and "},{"code":"ViewAction","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BindableAction","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[],"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">>) -> ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"kind":"symbol","title":"subscript(dynamicMember:)","url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-3q4xh","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9v9l0":{"title":"init(_:observe:send:removeDuplicates:)","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9v9l0","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9v9l0","abstract":[{"text":"Initializes a structure that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" into an observable ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" in order"},{"type":"text","text":" "},{"text":"to compute bindings from state.","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Action","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">) -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:transaction:)":{"title":"send(_:transaction:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:transaction:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:transaction:)","abstract":[{"text":"Sends an action to the store with a given transaction.","type":"text"}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"text":"transaction","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-3ak1y":{"role":"symbol","title":"init(_:observe:)","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-3ak1y","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"url":"\/documentation\/composablearchitecture\/withviewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"text":" so that its state can be observed","type":"text"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}],"type":"topic","title":"WithViewStore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/state":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"}],"deprecated":true,"role":"symbol","abstract":[{"type":"text","text":"The current state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","type":"topic","kind":"symbol","title":"state","url":"\/documentation\/composablearchitecture\/viewstore\/state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/objectWillChange":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/objectWillChange","type":"topic","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"objectWillChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ObservableObjectPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC"}],"kind":"symbol","title":"objectWillChange","url":"\/documentation\/composablearchitecture\/viewstore\/objectwillchange","role":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"type":"text","text":" "},{"text":"actions to the store.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"get"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"binding(get:send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","type":"topic"},"doc://ComposableArchitecture/7Combine16ObservableObjectP":{"title":"Combine.ObservableObject","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"abstract":[{"text":"Suspends the current task while a predicate on state is ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"yield","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","deprecated":true,"title":"yield(while:)","type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","url":"\/documentation\/composablearchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-81c6d":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-81c6d","type":"topic","abstract":[{"type":"text","text":"Initializes a structure that transforms a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" into an observable ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to compute bindings from state."}],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"observe"},{"text":": (","kind":"text"},{"text":"BindingViewStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"removeDuplicates","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(_:observe:removeDuplicates:)","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-81c6d","role":"symbol"}}}