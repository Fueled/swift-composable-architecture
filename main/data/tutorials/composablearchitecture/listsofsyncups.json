{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[{"kind":"hero","estimatedTimeInMinutes":10,"title":"Lists of sync-ups","chapter":"Lists of sync-ups","content":[{"type":"paragraph","inlineContent":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}]}]},{"kind":"tasks","tasks":[{"anchor":"Domain-models","stepsSection":[{"media":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Create a Models.swift file where we will house all of the models the app needs to do its"},{"type":"text","text":" "},{"text":"job.","type":"text"}],"type":"paragraph"}],"code":"ListsOfSyncUps-01-code-0001.swift","runtimePreview":null,"caption":[]},{"caption":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SyncUp"},{"text":" type represents a recurring meeting for a set of attendees. The ","type":"text"},{"code":"Meeting","type":"codeVoice"},{"type":"text","text":" type"},{"type":"text","text":" "},{"text":"represents a past recorded meeting, and includes a transcript if we were able to transcribe","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the meeting."}],"type":"paragraph"}],"runtimePreview":null,"media":null,"code":"ListsOfSyncUps-01-code-0002.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Copy and paste the following models into Models.swift. This code comes mostly verbatim from"},{"text":" ","type":"text"},{"type":"text","text":"Apple’s Scrumdinger project."}],"type":"paragraph"}]},{"inlineContent":[{"text":"While these models would work well enough in our SyncUps application, we can do better. First","type":"text"},{"type":"text","text":" "},{"text":"it is not ideal to hold onto plain arrays in our domain. This leads us to a situation of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"referring to attendees and meetings by their positional index in the array, rather than their"},{"type":"text","text":" "},{"type":"text","text":"inherent ID, as given by the "},{"type":"codeVoice","code":"Identifiable"},{"text":" protocol. This becomes especially problematic when","type":"text"},{"type":"text","text":" "},{"text":"performing asynchronous effects in which the position of a value can change while the effect","type":"text"},{"text":" ","type":"text"},{"text":"is being performed, making it possible to refer to the wrong value, leading to bugs, or a","type":"text"},{"type":"text","text":" "},{"text":"nonexistent value, leading to crashes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For this reason we recommend using our ","type":"text"},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-identified-collections","type":"reference"},{"text":" type, which","type":"text"},{"text":" ","type":"text"},{"text":"behaves like an array, but allows you to refer to elements by their ID rather than their","type":"text"},{"type":"text","text":" "},{"text":"positional index in the collection.","type":"text"}],"type":"paragraph"},{"caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"text":"Replace all plain arrays with an ","type":"text"},{"code":"IdentifiedArray","type":"codeVoice"},{"type":"text","text":". This type comes from our"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-identified-collections"},{"type":"text","text":" library, which is automatically included with"},{"type":"text","text":" "},{"text":"the Composable Architecture.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"code":"ListsOfSyncUps-01-code-0003.swift"}],"title":"Domain models","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to build a view that shows a list of sync-ups we need to first have some data models"},{"type":"text","text":" "},{"text":"that represent a ","type":"text"},{"type":"codeVoice","code":"SyncUp"},{"type":"text","text":". So, let’s get some models into place."}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}]},{"title":"SyncUpsList feature","stepsSection":[{"media":null,"code":"ListsOfSyncUps-02-code-0001.swift","type":"step","caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Create a new file for the feature called SyncUpsList.swift. We will also preemptively import"},{"text":" ","type":"text"},{"type":"text","text":"the Composable Architecture and SwiftUI since we know we will need access to those"},{"text":" ","type":"text"},{"text":"libraries.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We will start with implementing the reducer for the feature. This isn’t always necessary or"},{"text":" ","type":"text"},{"type":"text","text":"even preferred. It can also work well to start by sketching out the view hierarchy for your"},{"text":" ","type":"text"},{"type":"text","text":"view, and then implementing the reducer."}]},{"runtimePreview":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Add a struct called ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and annotate it with the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro. This type will encapsulate the domain of the"},{"type":"text","text":" "},{"type":"text","text":"feature and implement its logic and behavior."}]}],"media":null,"code":"ListsOfSyncUps-02-code-0002.swift"},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Add an inner ","type":"text"},{"type":"codeVoice","code":"State"},{"type":"text","text":" type to represent the data the feature needs to do its job. Right now"},{"text":" ","type":"text"},{"text":"that can just be the collection of ","type":"text"},{"type":"codeVoice","code":"SyncUp"},{"type":"text","text":"s in the list. We will also mark the "},{"type":"codeVoice","code":"State"},{"text":" ","type":"text"},{"text":"type with the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference","isActive":true},{"text":" macro so that the view can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"automatically observe changes to state."}]}],"runtimePreview":null,"code":"ListsOfSyncUps-02-code-0003.swift","caption":[{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"We are preemptively making ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" conform to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" because it will be useful"},{"text":" ","type":"text"},{"type":"text","text":"for tests later in this tutorial."}]}]}]},{"inlineContent":[{"type":"text","text":"Next we add an "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum to represent all of the actions the user can perform in the UI."},{"text":" ","type":"text"},{"type":"text","text":"Right now there are only 3 actions: they can tap the “+” button in the top-right of the"},{"text":" ","type":"text"},{"type":"text","text":"navigation toolbar, they can tap a sync-up in the list, or they can swipe-to-delete on a row."}],"type":"paragraph"},{"code":"ListsOfSyncUps-02-code-0004.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add an "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" enum with a case for each action the user can perform in the UI."}]}],"caption":[{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"As we saw in "},{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","type":"reference","isActive":true},{"type":"text","text":", we prefer to name our actions"},{"type":"text","text":" "},{"text":"after exactly what happens in the view rather than what logic we want to execute. So we","type":"text"},{"type":"text","text":" "},{"type":"text","text":"prefer "},{"code":"addSyncUpButtonTapped","type":"codeVoice"},{"text":" over something like ","type":"text"},{"code":"showAddSheet","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"runtimePreview":null,"media":null},{"code":"ListsOfSyncUps-02-code-0005.swift","content":[{"inlineContent":[{"text":"Implement the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"type":"text","text":" of the reducer by using the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","isActive":true},{"text":" type to implement each action. We will leave the","type":"text"},{"text":" ","type":"text"},{"code":"addSyncUpButtonTapped","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"syncUpTapped"},{"text":" actions unimplemented for now since it requires","type":"text"},{"text":" ","type":"text"},{"text":"more work to present a sheet and drill down to a sync-up.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","caption":[{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Due to a bug in the Swift compiler it can often happen that you lose type inference","type":"text"},{"type":"text","text":" "},{"text":"inside ","type":"text"},{"type":"codeVoice","code":"Reduce"},{"type":"text","text":". If that happens you can specify the generics to restore inference and"},{"text":" ","type":"text"},{"text":"autocomplete: ","type":"text"},{"code":"Reduce<State, Action>","type":"codeVoice"},{"type":"text","text":"."}]}],"style":"note","name":"Note"}],"media":null},{"type":"paragraph","inlineContent":[{"text":"That is all that is necessary for the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" reducer for now. Later we will compose","type":"text"},{"type":"text","text":" "},{"text":"more reducers into this body to handle more functionality.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, let’s implement the view that will be powered by the "},{"code":"SyncUpsList","type":"codeVoice"},{"text":" reducer. We will","type":"text"},{"text":" ","type":"text"},{"text":"need some helpers to break down the list view since it’s quite complex, and most of these","type":"text"},{"type":"text","text":" "},{"text":"helpers we will be taking directly from Apple’s Scrumdinger code with few modifications.","type":"text"}]},{"media":null,"caption":[{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"We are omitting the implementation of the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" reducer to keep the code"},{"type":"text","text":" "},{"type":"text","text":"snippet short. You are also free to put the reducer and view in separate files, but we"},{"text":" ","type":"text"},{"type":"text","text":"like to keep them in the same file until it becomes untenable."}],"type":"paragraph"}],"style":"note"}],"runtimePreview":null,"type":"step","code":"ListsOfSyncUps-02-code-0006.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"CardView"},{"type":"text","text":" that represents a single row in the list of sync-ups."}]}]},{"media":null,"runtimePreview":null,"code":"ListsOfSyncUps-02-code-0007.swift","type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Add a "},{"code":"SyncUpsListView","type":"codeVoice"},{"text":" that holds onto a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" of the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" domain.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement the "},{"type":"codeVoice","code":"body"},{"text":" of the view as a ","type":"text"},{"code":"List","type":"codeVoice"},{"type":"text","text":" with a "},{"type":"codeVoice","code":"ForEach"},{"text":" that iterates over the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection of sync-ups. We will also add a button to the toolbar that will eventually"},{"type":"text","text":" "},{"type":"text","text":"present a sheet for adding a new sync-up. Since we marked the "},{"type":"codeVoice","code":"State"},{"type":"text","text":" type with the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},{"type":"text","text":" macro we can access state directly in the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"store"},{"text":" and send actions to it.","type":"text"}]}],"runtimePreview":null,"caption":[{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"In order to get the colors for each ","type":"text"},{"code":"Theme","type":"codeVoice"},{"text":" value you will need to copy the","type":"text"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/tree\/main\/Examples\/SyncUps\/SyncUps\/Assets.xcassets","isActive":true,"type":"reference"},{"text":" from the completed demo project into your project.","type":"text"}]}],"name":"Note"}],"type":"step","media":null,"code":"ListsOfSyncUps-02-code-0008.swift"},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With that done we can set up a preview. Add a "},{"type":"codeVoice","code":"#Preview"},{"type":"text","text":" down at the bottom of the file."},{"type":"text","text":" "},{"type":"text","text":"To construct a "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":" you need to construct a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature. This is done by providing the initial state of the feature,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and we can even pre-populate it with a "},{"type":"codeVoice","code":"SyncUp"},{"type":"text","text":" in the array, as well as specifying the"},{"type":"text","text":" "},{"type":"text","text":"reducer that will power the feature."}]}],"media":null,"code":"ListsOfSyncUps-02-code-0009.swift","runtimePreview":null,"type":"step"},{"code":null,"type":"step","caption":[],"content":[{"inlineContent":[{"text":"Run the preview to see that the list of sync-ups shows with one single sync-up already","type":"text"},{"type":"text","text":" "},{"text":"populated in the list. You can also swipe on the row to delete it.","type":"text"}],"type":"paragraph"}],"media":"ListsOfSyncUps-02-code-0010.mp4","runtimePreview":null}],"anchor":"SyncUpsList-feature","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Now that the core domain types are added to the project we can start building out our first","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature: the SyncUps list. This is the feature that displays a list of all the sync-ups, and"},{"type":"text","text":" "},{"text":"eventually it will contain quite a bit of functionality, such as creating new sync-ups and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"drilling down to existing sync-ups."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But for now we will concentrate on just two very basic forms of functionality: displaying the"},{"text":" ","type":"text"},{"text":"list, and allowing the user to swipe to delete a sync-up.","type":"text"}]}],"mediaPosition":"trailing","media":"ListsOfSyncUps-cover.png","kind":"contentAndMedia"}]},{"title":"A handy debugging tool","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With this little bit of work done we can already demonstrate a powerful debugging tool of the"},{"type":"text","text":" "},{"text":"Composable Architecture. It is possible to print a nicely formatted diff of your features’","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state whenever it is mutated."}]}]}],"anchor":"A-handy-debugging-tool","stepsSection":[{"caption":[],"type":"step","code":"ListsOfSyncUps-03-code-0001.swift","media":null,"content":[{"inlineContent":[{"text":"At the bottom of the file, where the ","type":"text"},{"code":"#Preview","type":"codeVoice"},{"type":"text","text":" is constructed, apply the "},{"code":"_printChanges()","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer operator to ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":".","type":"text"}],"type":"paragraph"}],"runtimePreview":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the preview again and delete the row. View the logs in the console to see that a nicely"},{"type":"text","text":" "},{"text":"formatted message has been printed to the console to show what action was sent and how the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state changed."}]}],"runtimePreview":null,"code":"ListsOfSyncUps-03-code-0002.diff","media":null,"caption":[]}]}]},{"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Testing the list of sync-ups","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"action":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","isActive":true}}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","interfaceLanguage":"swift"},"variants":[{"paths":["\/tutorials\/composablearchitecture\/listsofsyncups"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Lists of sync-ups","categoryPathComponent":"BuildingSyncUps","role":"project","category":"Building SyncUps"},"kind":"project","hierarchy":{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}]}],"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"]]},"references":{"ListsOfSyncUps-02-code-0004.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-02-code-0004.swift","syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","}"],"highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"fragile."}],"role":"pseudoSymbol","title":"Adding a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","kind":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","title":"A basic timer","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"role":"pseudoSymbol","title":"Controlling dependencies early"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","kind":"project","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min","title":"Testing the add sync-up flow","type":"topic"},"ListsOfSyncUps-02-code-0001.swift":{"highlights":[],"fileType":"swift","identifier":"ListsOfSyncUps-02-code-0001.swift","fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI"],"syntax":"swift"},"ListsOfSyncUps-02-code-0006.swift":{"fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41}],"type":"file","fileName":"SyncUpsList.swift","identifier":"ListsOfSyncUps-02-code-0006.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundColor(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}"]},"ListsOfSyncUps-01-code-0001.swift":{"highlights":[],"fileType":"swift","identifier":"ListsOfSyncUps-01-code-0001.swift","fileName":"Models.swift","type":"file","content":["import Foundation"],"syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","title":"Form focus: a better approach"},"ListsOfSyncUps-02-code-0005.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-02-code-0005.swift","syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","  }","}"],"highlights":[{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"kind":"project","url":"\/tutorials\/composablearchitecture\/implementingtimer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","estimatedTime":"25min","title":"Adding a meeting timer","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"type":"text","text":" "},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"previous recorded meeting."}],"role":"pseudoSymbol","title":"Navigate to a meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups","type":"topic","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"text":" ","type":"text"},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"text":" ","type":"text"},{"type":"text","text":"the app evolves."}],"role":"project","estimatedTime":"10min","title":"Lists of sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","kind":"section","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","title":"Deleting the sync-up","type":"section"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"type":"text","text":" protocol for a type."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"title":"body","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"required":true,"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","kind":"typeIdentifier"}],"defaultImplementations":2},"ListsOfSyncUps-03-code-0001.swift":{"highlights":[{"line":80}],"fileType":"swift","identifier":"ListsOfSyncUps-03-code-0001.swift","fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  let store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        Button {","","        } label: {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","      .onDelete { indexSet in","        store.send(.onDelete(indexSet))","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundColor(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","          ._printChanges()","      }","    )","  }","}"],"syntax":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","kind":"section","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","title":"Create a new feature","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","kind":"project","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"type":"text","text":" "},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","estimatedTime":"30min","title":"Editing and deleting a sync-up","type":"topic"},"ListsOfSyncUps-02-code-0008.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-02-code-0008.swift","syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  let store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        Button {","","        } label: {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","      .onDelete { indexSet in","        store.send(.onDelete(indexSet))","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundColor(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}"],"highlights":[{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","abstract":[],"role":"article","title":"Navigating to sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"role":"pseudoSymbol","title":"More concise domain modeling"},"ListsOfSyncUps-02-code-0007.swift":{"highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15}],"fileType":"swift","identifier":"ListsOfSyncUps-02-code-0007.swift","fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  let store: StoreOf<SyncUpsList>","","  var body: some View {","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundColor(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}"],"syntax":"swift"},"ListsOfSyncUps-01-code-0003.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-01-code-0003.swift","syntax":"swift","fileName":"Models.swift","content":["import Foundation","import IdentifiedCollections","import SwiftUI","","struct SyncUp: Equatable, Identifiable, Codable {","  let id: UUID","  var attendees: IdentifiedArrayOf<Attendee> = []","  var duration: Duration = .seconds(60 * 5)","  var meetings: IdentifiedArrayOf<Meeting> = []","  var theme: Theme = .bubblegum","  var title = \"\"","","  var durationPerAttendee: Duration {","    duration \/ attendees.count","  }","}","","struct Attendee: Equatable, Identifiable, Codable {","  let id: UUID","  var name = \"\"","}","","struct Meeting: Equatable, Identifiable, Codable {","  let id: UUID","  let date: Date","  var transcript: String","}","","enum Theme: String, CaseIterable, Equatable, Identifiable, Codable {","  var id: Self { self }","  ","  case bubblegum","  case buttercup","  case indigo","  case lavender","  case magenta","  case navy","  case orange","  case oxblood","  case periwinkle","  case poppy","  case purple","  case seafoam","  case sky","  case tan","  case teal","  case yellow","","  var accentColor: Color {","    switch self {","    case .bubblegum, .buttercup, .lavender, .orange, .periwinkle, .poppy, .seafoam, .sky, .tan,","        .teal, .yellow:","      return .black","    case .indigo, .magenta, .navy, .oxblood, .purple:","      return .white","    }","  }","","  var mainColor: Color { Color(rawValue) }","","  var name: String { rawValue.capitalized }","}","","extension SyncUp {","  static let mock = SyncUp(","    id: SyncUp.ID(),","    attendees: [","      Attendee(id: Attendee.ID(), name: \"Blob\"),","      Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      Attendee(id: Attendee.ID(), name: \"Blob Sr.\"),","    ],","    title: \"Point-Free Morning Sync\"","  )","}"],"highlights":[{"line":2},{"line":7},{"line":9}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","url":"\/tutorials\/buildingsyncups","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}],"role":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","title":"Building SyncUps","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","kind":"section","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","title":"Creating the app view","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"project","title":"Persisting sync-ups","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","role":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/persistingsyncups","estimatedTime":"5min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform","type":"topic","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"text":" ","type":"text"},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"project","estimatedTime":"10min","title":"Testing the sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","kind":"section","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","title":"Create the SyncUps project","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"url":"\/tutorials\/buildingsyncups\/record-meeting","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","abstract":[],"role":"article","title":"Record meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"pseudoSymbol","title":"Create the sync-up detail"},"ListsOfSyncUps-02-code-0002.swift":{"highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7}],"fileType":"swift","identifier":"ListsOfSyncUps-02-code-0002.swift","fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","","}"],"syntax":"swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","abstract":[{"text":"Creates a persistence key that can read and write to a ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value in the file system."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fileStorage"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"fileStorage(_:decoder:encoder:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/shared","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","title":"Shared","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Shared"}]},"https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/SyncUps/SyncUps/Assets.xcassets":{"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/tree\/main\/Examples\/SyncUps\/SyncUps\/Assets.xcassets","type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/tree\/main\/Examples\/SyncUps\/SyncUps\/Assets.xcassets","title":"Assets.xcassets","titleInlineContent":[{"text":"Assets.xcassets","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","kind":"section","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"code":"@Shared","type":"codeVoice"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","overridingTitle":"@Shared"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","type":"reference","isActive":true},{"text":".","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","title":"Testing persistence","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"role":"pseudoSymbol","title":"Asking for speech recognition permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"text":" ","type":"text"},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"text":" ","type":"text"},{"text":"behavior to test.","type":"text"}],"role":"pseudoSymbol","title":"Writing your first test"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","kind":"project","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","estimatedTime":"20min","title":"Navigating to a sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"kind":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","title":"Creating the app feature","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"url":"\/tutorials\/buildingsyncups\/sync-up-detail","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","abstract":[],"role":"article","title":"Sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","kind":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"text":" ","type":"text"},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"text":" ","type":"text"},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","title":"Ending the meeting early","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","abstract":[],"role":"article","title":"Lists of sync-ups"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"title":"ObservableState","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"}],"navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/observablestate","kind":"symbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation","kind":"project","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"text":"previous recorded meeting.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","estimatedTime":"5min","title":"Navigating to a meeting","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","abstract":[],"role":"article","title":"Persisting sync-ups to disk"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"title":"Reducer","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","kind":"section","abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"type":"text","text":" "},{"text":"previous recorded meeting.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","title":"The meeting screen","type":"section"},"http://github.com/pointfreeco/swift-identified-collections":{"url":"http:\/\/github.com\/pointfreeco\/swift-identified-collections","type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-identified-collections","title":"IdentifiedCollections","titleInlineContent":[{"type":"text","text":"IdentifiedCollections"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"text":" ","type":"text"},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"text":" ","type":"text"},{"isActive":true,"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":"."}],"role":"pseudoSymbol","title":"Persisting data to disk"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"type":"text","text":" "},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"role":"pseudoSymbol","title":"Editing the sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"url":"\/tutorials\/composablearchitecture\/syncupform","type":"topic","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"project","estimatedTime":"15min","title":"Sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","abstract":[{"text":"The ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"type":"text","text":" "},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"type":"text","text":" "},{"text":"communicates with a parent feature via delegate actions. It’s about time we got some test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","estimatedTime":"10min","title":"Testing the sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"text":"add that sync-up to the root list.","type":"text"}],"role":"pseudoSymbol","title":"Adding a new sync-up to the list"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","kind":"section","abstract":[{"type":"text","text":"The "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"communicates with a parent feature via delegate actions. It’s about time we got some test"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"type":"text","text":" "},{"text":"changes with confidence.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","title":"Testing the edit flow","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"text":", and","type":"text"},{"type":"text","text":" "},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"type":"text","text":" "},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","title":"Non-exhaustive testing","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"pseudoSymbol","title":"SyncUpsList feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","kind":"section","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"type":"text","text":" "},{"text":"3 features into the stack: the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","title":"Deleting a sync-up","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","title":"Integrating the feature views together"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","kind":"project","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","estimatedTime":"5min","title":"The RecordMeeting feature","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","kind":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"type":"text","text":" "},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","title":"Navigating to the record meeting feature","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"url":"\/tutorials\/composablearchitecture\/whatissyncups","type":"topic","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"text":" ","type":"text"},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"project","estimatedTime":"5min","title":"What is SyncUps?"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"pseudoSymbol","title":"Sync-up form basics"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"type":"text","text":" "},{"text":"the app evolves.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","title":"Domain models","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","kind":"project","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","estimatedTime":"10min","title":"Adding a speech recognizer","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"url":"\/tutorials\/composablearchitecture\/syncupdetail","kind":"project","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"text":" ","type":"text"},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"text":" ","type":"text"},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","estimatedTime":"5min","title":"Sync-up detail","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","kind":"section","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","title":"Adding attendees","type":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","title":"New sync-up form","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"text":"feature to make things a little more interesting.","type":"text"}],"role":"pseudoSymbol","title":"Form focus: an approach"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","type":"topic","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"text":" ","type":"text"},{"type":"text","text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"Meet the Composable Architecture","url":"\/tutorials\/meetcomposablearchitecture","role":"overview","kind":"overview"},"ListsOfSyncUps-02-code-0003.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-02-code-0003.swift","syntax":"swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","}"],"highlights":[{"line":6},{"line":7},{"line":8},{"line":9}]},"ListsOfSyncUps-02-code-0009.swift":{"highlights":[{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82},{"line":83}],"fileType":"swift","identifier":"ListsOfSyncUps-02-code-0009.swift","fileName":"SyncUpsList.swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  let store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        Button {","","        } label: {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","      .onDelete { indexSet in","        store.send(.onDelete(indexSet))","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundColor(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"syntax":"swift"},"ListsOfSyncUps-cover.png":{"type":"image","identifier":"ListsOfSyncUps-cover.png","variants":[{"url":"\/images\/ComposableArchitecture\/ListsOfSyncUps-cover.png","traits":["1x","light"]}],"alt":null},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","title":"Removing attendees","type":"section"},"ListsOfSyncUps-03-code-0002.diff":{"highlights":[],"fileType":"diff","identifier":"ListsOfSyncUps-03-code-0002.diff","fileName":"console-output.diff","type":"file","content":["received action:","  AppFeature.Action.syncUpsList(","    .onDelete(","      IndexSet(","        ranges: [","          [0]: 0..<1","        ]","      )","    )","  )","  AppFeature.State(","    _path: [:],","    _syncUpsList: SyncUpsList.State(","      _destination: nil,","      _syncUps: [","-       SyncUp(","-         id: Tagged(rawValue: UUID(BCD45D06-2291-4A22-906A-C1EF07500AB7)),","-         attendees: [","-           [0]: Attendee(","-             id: Tagged(rawValue: UUID(90414E54-A420-46BC-97B7-0F5C2AE9FF43)),","-             name: \"Blob\"","-           ),","-           [1]: Attendee(","-             id: Tagged(rawValue: UUID(6DB1380D-DEFF-4C16-A432-09F263EA79FF)),","-             name: \"Blob Jr\"","-           ),","-           [2]: Attendee(","-             id: Tagged(rawValue: UUID(01A53781-5EA2-43EE-A44F-79E73B452ADF)),","-             name: \"Blob Sr\"","-           )","-         ],","-         duration: 5 minutes,","-         meetings: [],","-         theme: .bubblegum,","-         title: \"Point-Free Morning Sync\"","-       )","      ]","    )","  )"],"syntax":"diff"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","kind":"article","abstract":[],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","title":"Presenting the sync-up form","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"url":"\/tutorials\/buildingsyncups\/what-is-syncups-","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","abstract":[],"role":"article","title":"What is SyncUps?"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","kind":"section","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","title":"Navigating to the detail","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"type":"text","text":" "},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"role":"pseudoSymbol","title":"A handy debugging tool"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform","type":"topic","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"type":"text","text":" "},{"text":"add that sync-up to the root list.","type":"text"}],"role":"project","estimatedTime":"10min","title":"Presenting the sync-up form"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"kind":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","title":"A tour of SyncUps","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","kind":"project","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"text":" ","type":"text"},{"text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice","type":"text"},{"type":"text","text":" "},{"text":"to test new features as you add them, and in the future we will have much more complicated","type":"text"},{"type":"text","text":" "},{"text":"behavior to test.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","estimatedTime":"5min","title":"Testing the list of sync-ups","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"abstract":[{"type":"text","text":"A type-erased reducer that invokes the given "},{"code":"reduce","type":"codeVoice"},{"type":"text","text":" function."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","navigatorTitle":[{"text":"Reduce","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reduce"}],"url":"\/documentation\/composablearchitecture\/reduce","kind":"symbol","title":"Reduce"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"type":"text","text":" "},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"role":"pseudoSymbol","title":"Testing the timer"},"ListsOfSyncUps-01-code-0002.swift":{"type":"file","fileType":"swift","identifier":"ListsOfSyncUps-01-code-0002.swift","syntax":"swift","fileName":"Models.swift","content":["import Foundation","import SwiftUI","","struct SyncUp: Equatable, Identifiable, Codable {","  let id: UUID","  var attendees: [Attendee] = []","  var duration: Duration = .seconds(60 * 5)","  var meetings: [Meeting] = []","  var theme: Theme = .bubblegum","  var title = \"\"","","  var durationPerAttendee: Duration {","    duration \/ attendees.count","  }","}","","struct Attendee: Equatable, Identifiable, Codable {","  let id: UUID","  var name = \"\"","}","","struct Meeting: Equatable, Identifiable, Codable {","  let id: UUID","  let date: Date","  var transcript: String","}","","enum Theme: String, CaseIterable, Equatable, Identifiable, Codable {","  var id: Self { self }","  ","  case bubblegum","  case buttercup","  case indigo","  case lavender","  case magenta","  case navy","  case orange","  case oxblood","  case periwinkle","  case poppy","  case purple","  case seafoam","  case sky","  case tan","  case teal","  case yellow","","  var accentColor: Color {","    switch self {","    case .bubblegum, .buttercup, .lavender, .orange, .periwinkle, .poppy, .seafoam, .sky, .tan,","        .teal, .yellow:","      return .black","    case .indigo, .magenta, .navy, .oxblood, .purple:","      return .white","    }","  }","","  var mainColor: Color { Color(rawValue) }","","  var name: String { rawValue.capitalized }","}","","extension SyncUp {","  static let mock = SyncUp(","    id: SyncUp.ID(),","    attendees: [","      Attendee(id: Attendee.ID(), name: \"Blob\"),","      Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      Attendee(id: Attendee.ID(), name: \"Blob Sr.\"),","    ],","    title: \"Point-Free Morning Sync\"","  )","}"],"highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73}]},"ListsOfSyncUps-02-code-0010.mp4":{"type":"video","poster":null,"identifier":"ListsOfSyncUps-02-code-0010.mp4","variants":[{"url":"\/videos\/ComposableArchitecture\/ListsOfSyncUps-02-code-0010.mp4","traits":["1x","light"]}],"alt":null},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"url":"\/tutorials\/composablearchitecture\/testingnavigation","kind":"project","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, the "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature, and the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","estimatedTime":"10min","title":"Testing navigation","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add that sync-up to the root list."}],"role":"pseudoSymbol","title":"Integrating the feature domains together"}}}